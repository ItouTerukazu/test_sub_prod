name: Update Project Issue Status to In Progress

on:
  create:
    branches:
      - '*'

jobs:
  update-project-status:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Update Project Issue Status to In Progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          STATUS_FIELD_ID: ${{ secrets.STATUS_FIELD_ID }}
        run: |
          set -x  # デバッグモードを有効化

          # ブランチ名から最初の数字列を抽出
          ISSUE_NUMBER=$(echo ${{ github.ref }} | grep -oP '\d+' | head -n1)
          
          if [ -n "$ISSUE_NUMBER" ]; then
            echo "イシュー番号 $ISSUE_NUMBER のプロジェクトステータスを 'In Progress' に更新します。"
            
            # イシューのノードIDを取得
            ISSUE_NODE_ID=$(gh api graphql -f query='
              query($owner:String!, $repo:String!, $number:Int!) {
                repository(owner:$owner, name:$repo) {
                  issue(number:$number) {
                    id
                  }
                }
              }
            ' -f owner=${{ github.repository_owner }} -f repo=${{ github.event.repository.name }} -F number=$ISSUE_NUMBER --jq '.data.repository.issue.id')

            echo "イシューノードID: $ISSUE_NODE_ID"

            if [ -z "$ISSUE_NODE_ID" ]; then
              echo "イシューが見つかりませんでした。処理を中止します。"
              exit 1
            fi

            # プロジェクト内のイシューのIDを取得
            PROJECT_ITEM_ID=$(gh api graphql -f query='
              query($projectId:ID!, $contentId:ID!) {
                node(id:$projectId) {
                  ... on ProjectV2 {
                    items(first:100) {
                      nodes {
                        id
                        content {
                          ... on Issue {
                            id
                          }
                        }
                      }
                    }
                  }
                }
              }
            ' -f projectId=$PROJECT_ID -f contentId=$ISSUE_NODE_ID --jq ".data.node.items.nodes[] | select(.content.id == \"$ISSUE_NODE_ID\") | .id")

            echo "プロジェクトアイテムID: $PROJECT_ITEM_ID"

            if [ -z "$PROJECT_ITEM_ID" ]; then
              echo "プロジェクト内にイシューが見つかりませんでした。処理を中止します。"
              exit 1
            fi

            # ステータスオプションIDを取得
            STATUS_OPTION_ID=$(gh api graphql -f query='
              query($projectId:ID!) {
                node(id:$projectId) {
                  ... on ProjectV2 {
                    field(name: "Status") {
                      ... on ProjectV2SingleSelectField {
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            ' -f projectId=$PROJECT_ID --jq '.data.node.field.options[] | select(.name == "In Progress") | .id')

            echo "ステータスオプションID: $STATUS_OPTION_ID"

            if [ -z "$STATUS_OPTION_ID" ]; then
              echo "'In Progress' ステータスオプションが見つかりませんでした。処理を中止します。"
              exit 1
            fi

            # プロジェクトアイテムのステータスを更新
            UPDATE_RESULT=$(gh api graphql -f query='
              mutation($projectId:ID!, $itemId:ID!, $fieldId:ID!, $optionId:String!) {
                updateProjectV2ItemFieldValue(
                  input: {
                    projectId: $projectId
                    itemId: $itemId
                    fieldId: $fieldId
                    value: {
                      singleSelectOptionId: $optionId
                    }
                  }
                ) {
                  projectV2Item {
                    id
                  }
                }
              }
            ' -f projectId=$PROJECT_ID -f itemId=$PROJECT_ITEM_ID -f fieldId=$STATUS_FIELD_ID -f optionId=$STATUS_OPTION_ID)

            if echo "$UPDATE_RESULT" | grep -q "errors"; then
              echo "ステータス更新中にエラーが発生しました："
              echo "$UPDATE_RESULT"
              exit 1
            else
              echo "イシューのプロジェクトステータスを 'In Progress' に更新しました。"
            fi
          else
            echo "ブランチ名に数字が見つかりませんでした。イシューの更新はスキップします。"
          fi
